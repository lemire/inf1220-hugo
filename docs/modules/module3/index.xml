<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Module 3: Les structures de données, de contrôle et d'itération en Java on INF 1220 - Introduction à la programmation</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/</link><description>Recent content in Module 3: Les structures de données, de contrôle et d'itération en Java on INF 1220 - Introduction à la programmation</description><generator>Hugo</generator><language>fr</language><atom:link href="https://lemire.github.io/inf1220-hugo/docs/modules/module3/index.xml" rel="self" type="application/rss+xml"/><item><title>Java pas à pas</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/pasapas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/pasapas/</guid><description>&lt;h1 id="java-pas-à-pas">
 Java pas à pas
 &lt;a class="anchor" href="#java-pas-%c3%a0-pas">#&lt;/a>
&lt;/h1>
&lt;p>Nous vous invitons maintenant à lire le chapitre &lt;em>Structures de contrôle&lt;/em> (chapitre 3) du manuel Java pas à pas par Robert Godin et Daniel Lemire. Le chapitre comprend plusieurs exemples et exercices. Vous devez compléter les exercices du manuel. Vous pouvez aussi exécuter certains exemples du manuel sur cette page.&lt;/p>
&lt;div class="java-inline">






 &lt;div id="java-runner-1751039190520260522">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/eclipse.min.css">
 &lt;style>
 #java-runner-1751039190520260522 .export-form textarea { width:100%; min-height:120px; font-family:monospace; border-radius:4px; border:1px solid #ccc; }
 #java-runner-1751039190520260522 .export-form { margin-bottom:0; }
 #java-runner-1751039190520260522 .export-result { background:#222; color:#eee; padding:12px; border-radius:6px; margin-top:16px; white-space:pre-wrap; font-family:monospace; }
 #java-runner-1751039190520260522 .export-endpoint-info { color:#1976d2; font-size:0.98em; margin-top:8px; }
 #java-runner-1751039190520260522 .export-btn { background:#1976d2; color:#fff; border:none; border-radius:4px; padding:8px 16px; font-size:1em; cursor:pointer; margin-top:8px; }
 #java-runner-1751039190520260522 .export-file-block { max-width: 100%;flex:1 1 350px; background:#f9f9f9; border:1px solid #ddd; border-radius:6px; padding:12px; margin-bottom:8px; }
 #java-runner-1751039190520260522 .export-file-block .export-file-name { font-weight:bold; margin-bottom:4px; }
 .cm-java-error { background: #ffe0e0 !important; border-bottom: 2px dotted #c00; cursor: pointer; }
 .cm-java-error-line { background: #fff0f0 !important; }
 &lt;/style>
 &lt;form class="export-form java-runner-1751039190520260522-form" style="margin-bottom:0;">
 &lt;input type="hidden" class="export-endpoint-var" value="https://flask-service-inf1220-java.90qakjuvfj4f8.ca-central-1.cs.amazonlightsail.com/run">
 &lt;div style="display:flex;gap:12px;flex-wrap:wrap;">
 &lt;div class='export-file-block'>&lt;div class='export-file-name'>ExemplesMath.java&lt;/div>&lt;textarea>
public class ExemplesMath {

 public static void main(String args[]) {
 System.out.println(&amp;#34;Math.log(1.0)=&amp;#34; &amp;#43; Math.log(1.0));
 System.out.println(&amp;#34;Math.exp(1.0)=&amp;#34; &amp;#43; Math.exp(1.0));
 System.out.println(&amp;#34;Math.cos(0)=&amp;#34; &amp;#43; Math.cos(0));
 System.out.println(&amp;#34;Math.sin(0)=&amp;#34; &amp;#43; Math.sin(0));
 System.out.println(&amp;#34;Math.sqrt(4)=&amp;#34; &amp;#43; Math.sqrt(4));
 }
}
&lt;/textarea>&lt;/div>
 &lt;/div>
 &lt;button type="submit" class="export-btn java-runner-1751039190520260522-btn" style="background:#1976d2;color:#fff;border:none;border-radius:4px;padding:8px 16px;font-size:1em;cursor:pointer;margin-top:8px;">Exécuter&lt;/button>
 &lt;/form>
 &lt;div class="export-result">&lt;/div>
 &lt;div class="java-error-tooltip" style="display:none;position:absolute;z-index:1000;background:#fff0f0;color:#c00;border:1px solid #c00;padding:6px 12px;border-radius:6px;font-size:1em;box-shadow:0 2px 8px #0002;">&lt;/div>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.js">&lt;/script>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/mode/clike/clike.min.js">&lt;/script>
 &lt;script>(function(){
 var root = document.getElementById('java-runner-1751039190520260522');
 if (!root) return;
 var form = root.querySelector('form');
 var resultDiv = root.querySelector('.export-result');
 var endpoint = form.querySelector('.export-endpoint-var').value;
 var tooltip = root.querySelector('.java-error-tooltip');
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 if(name.endsWith('.java')) {
 var cm = CodeMirror.fromTextArea(ta, {
 mode: "text/x-java",
 theme: "eclipse",
 lineNumbers: true,
 indentUnit: 4,
 tabSize: 4
 });
 block._cm = cm;
 
 block._javaErrorLines = {};
 
 cm.on('cursorActivity', function() {
 var statusBar = block.querySelector('.java-error-status-bar');
 if (!statusBar) return;
 var cursor = cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 
 if(name.endsWith('.java')) {
 if (!block.querySelector('.java-error-status-bar')) {
 var statusBar = document.createElement('div');
 statusBar.className = 'java-error-status-bar';
 statusBar.style.marginTop = '4px';
 statusBar.style.fontSize = '0.95em';
 statusBar.style.color = '#c00';
 statusBar.style.minHeight = '1.2em';
 statusBar.style.visibility = 'hidden';
 block.appendChild(statusBar);
 }
 }
 });
 
 function showTooltip(msg, x, y) {
 tooltip.textContent = msg;
 tooltip.style.display = 'block';
 tooltip.style.left = (x+10) + 'px';
 tooltip.style.top = (y+10) + 'px';
 }
 function hideTooltip() {
 tooltip.style.display = 'none';
 }
 form.onsubmit = function(e){
 e.preventDefault();
 var java_files = [], txt_files = [];
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 var content = block._cm ? block._cm.getValue() : ta.value;
 if(name.endsWith('.java')) java_files.push({name: name, content: content});
 else txt_files.push({name: name, content: content});
 });
 
 var dots = 0;
 resultDiv.textContent = 'Exécution en cours';
 var execAnim = setInterval(function() {
 dots = (dots + 1) % 4;
 resultDiv.textContent = 'Exécution en cours' + '.'.repeat(dots);
 }, 500);
 
 var controller = new AbortController();
 var timeoutId = setTimeout(function() { controller.abort(); }, 30000); 
 fetch(endpoint, {
 method: 'POST',
 headers: { 'Content-Type': 'application/json' },
 body: JSON.stringify({ java_files: java_files, txt_files: txt_files }),
 signal: controller.signal
 })
 .then(function(r){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (!r.ok &amp;&amp; r.status !== 400) {
 throw new Error('Erreur HTTP ' + r.status + ' : ' + r.statusText);
 }
 return r.text();
 })
 .then(function(t){
 try {
 var j=JSON.parse(t);
 
 if(j.status==='ran_successfully') {
 resultDiv.innerHTML='&lt;pre style="color:#222;background:#e0ffe0;padding:12px;border-radius:6px;">'+(j.output||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='compiling') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='runtime_error') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else {
 resultDiv.textContent = t;
 }
 
 if(j.status==='compiling') {
 var errorText = j.error || '';
 var errorRegex = new RegExp('([\\w./\\-]+\\.java):(\\d+): error: ([^\\n]+)([\\s\\S]*?)(?=\\n[\\w./\\-]+\\.java:|$)','g');
 var match;
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 while ((match = errorRegex.exec(errorText)) !== null) {
 var file = match[1], lineStr = match[2], msg = match[3], details = match[4];
 var line = parseInt(lineStr, 10) - 1;
 var errorMsg = (msg + (details ? details.replace(/\s+/g, ' ') : '')).trim();
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var nameInput = block.querySelector('.export-file-name');
 if (nameInput &amp;&amp; (nameInput.textContent.trim() === file || nameInput.textContent.trim().endsWith('/'+file) || nameInput.textContent.trim().endsWith('\\'+file))) {
 if (block._cm) {
 block._cm.operation(function() {
 block._cm.markText({line:line, ch:0}, {line:line+1, ch:0}, {
 className: 'cm-java-error',
 title: errorMsg
 });
 });
 }
 
 if (!block._javaErrorLines) { block._javaErrorLines = {}; }
 block._javaErrorLines[line] = errorMsg;
 }
 });
 }
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm &amp;&amp; block._cm.getOption('lineNumbers')) {
 
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 var cursor = block._cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 }
 }
 });
 } else {
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 } catch(e){ console.log(e); resultDiv.textContent=t; }
 })
 .catch(function(error){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (error.name === 'AbortError') {
 resultDiv.textContent = 'Erreur : délai d’attente dépassé (30 secondes).';
 } else {
 resultDiv.textContent = 'Erreur lors de la requête : ' + error;
 }
 });
 };
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var cm = block._cm;
 if (!cm) return;
 cm.on('mouseover', function(cm, event) {
 var pos = cm.coordsChar({ left: event.clientX, top: event.clientY });
 var line = pos.line, ch = pos.ch;
 var cursor = cm.getCursor();
 if (line === cursor.line &amp;&amp; block._javaErrorLines &amp;&amp; block._javaErrorLines[line]) {
 var msg = block._javaErrorLines[line];
 showTooltip(msg, event.clientX, event.clientY);
 }
 });
 cm.on('mouseout', function(cm, event) {
 hideTooltip();
 });
 });
 })();&lt;/script>
 &lt;/div>
&lt;/div>
&lt;div class="java-inline">






 &lt;div id="java-runner-1751039190520459786">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/eclipse.min.css">
 &lt;style>
 #java-runner-1751039190520459786 .export-form textarea { width:100%; min-height:120px; font-family:monospace; border-radius:4px; border:1px solid #ccc; }
 #java-runner-1751039190520459786 .export-form { margin-bottom:0; }
 #java-runner-1751039190520459786 .export-result { background:#222; color:#eee; padding:12px; border-radius:6px; margin-top:16px; white-space:pre-wrap; font-family:monospace; }
 #java-runner-1751039190520459786 .export-endpoint-info { color:#1976d2; font-size:0.98em; margin-top:8px; }
 #java-runner-1751039190520459786 .export-btn { background:#1976d2; color:#fff; border:none; border-radius:4px; padding:8px 16px; font-size:1em; cursor:pointer; margin-top:8px; }
 #java-runner-1751039190520459786 .export-file-block { max-width: 100%;flex:1 1 350px; background:#f9f9f9; border:1px solid #ddd; border-radius:6px; padding:12px; margin-bottom:8px; }
 #java-runner-1751039190520459786 .export-file-block .export-file-name { font-weight:bold; margin-bottom:4px; }
 .cm-java-error { background: #ffe0e0 !important; border-bottom: 2px dotted #c00; cursor: pointer; }
 .cm-java-error-line { background: #fff0f0 !important; }
 &lt;/style>
 &lt;form class="export-form java-runner-1751039190520459786-form" style="margin-bottom:0;">
 &lt;input type="hidden" class="export-endpoint-var" value="https://flask-service-inf1220-java.90qakjuvfj4f8.ca-central-1.cs.amazonlightsail.com/run">
 &lt;div style="display:flex;gap:12px;flex-wrap:wrap;">
 &lt;div class='export-file-block'>&lt;div class='export-file-name'>ExemplesString.java&lt;/div>&lt;textarea>
public class ExemplesString {

 public static void main(String args[]) {

 String string1 = &amp;#34;abc&amp;#34;;
 String string2 = &amp;#34;def&amp;#34;;
 String string3 = &amp;#34;abcdef&amp;#34;;
 String string4 = new String(&amp;#34;abcdef&amp;#34;);

 // Tous les litéraux identiques (� la compilation) sont traduits
 // par une référence au même objet
 System.out.println(string3 == &amp;#34;abcdef&amp;#34;); // true
 System.out.println(&amp;#34;abc&amp;#34; &amp;#43; &amp;#34;def&amp;#34; == &amp;#34;abcdef&amp;#34;); // true

 // Par contre, si le litéral est calculé à l&amp;#39;exécution, ce n&amp;#39;est pas le cas
 System.out.println(string1 &amp;#43; string2 == &amp;#34;abcdef&amp;#34;); // false

 // Le constructeur String produit toujours un objet différent de l&amp;#39;objet
 // correspondant au litéral
 System.out.println(string4 == &amp;#34;abcdef&amp;#34;); // false

 // La méthode intern() de la classe String permet de convertir
 // la référence à l&amp;#39;objet correspondant au litéral
 System.out.println((string1 &amp;#43; string2).intern() == &amp;#34;abcdef&amp;#34;); // true
 System.out.println(string4.intern() == &amp;#34;abcdef&amp;#34;); // true

 // La méthode equals() permet de comparer le contenu de l&amp;#39;objet plutôt que la référence
 System.out.println((string1 &amp;#43; string2).equals(&amp;#34;abcdef&amp;#34;)); // true
 System.out.println(string4.equals(&amp;#34;abcdef&amp;#34;)); // true
 }
}
&lt;/textarea>&lt;/div>
 &lt;/div>
 &lt;button type="submit" class="export-btn java-runner-1751039190520459786-btn" style="background:#1976d2;color:#fff;border:none;border-radius:4px;padding:8px 16px;font-size:1em;cursor:pointer;margin-top:8px;">Exécuter&lt;/button>
 &lt;/form>
 &lt;div class="export-result">&lt;/div>
 &lt;div class="java-error-tooltip" style="display:none;position:absolute;z-index:1000;background:#fff0f0;color:#c00;border:1px solid #c00;padding:6px 12px;border-radius:6px;font-size:1em;box-shadow:0 2px 8px #0002;">&lt;/div>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.js">&lt;/script>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/mode/clike/clike.min.js">&lt;/script>
 &lt;script>(function(){
 var root = document.getElementById('java-runner-1751039190520459786');
 if (!root) return;
 var form = root.querySelector('form');
 var resultDiv = root.querySelector('.export-result');
 var endpoint = form.querySelector('.export-endpoint-var').value;
 var tooltip = root.querySelector('.java-error-tooltip');
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 if(name.endsWith('.java')) {
 var cm = CodeMirror.fromTextArea(ta, {
 mode: "text/x-java",
 theme: "eclipse",
 lineNumbers: true,
 indentUnit: 4,
 tabSize: 4
 });
 block._cm = cm;
 
 block._javaErrorLines = {};
 
 cm.on('cursorActivity', function() {
 var statusBar = block.querySelector('.java-error-status-bar');
 if (!statusBar) return;
 var cursor = cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 
 if(name.endsWith('.java')) {
 if (!block.querySelector('.java-error-status-bar')) {
 var statusBar = document.createElement('div');
 statusBar.className = 'java-error-status-bar';
 statusBar.style.marginTop = '4px';
 statusBar.style.fontSize = '0.95em';
 statusBar.style.color = '#c00';
 statusBar.style.minHeight = '1.2em';
 statusBar.style.visibility = 'hidden';
 block.appendChild(statusBar);
 }
 }
 });
 
 function showTooltip(msg, x, y) {
 tooltip.textContent = msg;
 tooltip.style.display = 'block';
 tooltip.style.left = (x+10) + 'px';
 tooltip.style.top = (y+10) + 'px';
 }
 function hideTooltip() {
 tooltip.style.display = 'none';
 }
 form.onsubmit = function(e){
 e.preventDefault();
 var java_files = [], txt_files = [];
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 var content = block._cm ? block._cm.getValue() : ta.value;
 if(name.endsWith('.java')) java_files.push({name: name, content: content});
 else txt_files.push({name: name, content: content});
 });
 
 var dots = 0;
 resultDiv.textContent = 'Exécution en cours';
 var execAnim = setInterval(function() {
 dots = (dots + 1) % 4;
 resultDiv.textContent = 'Exécution en cours' + '.'.repeat(dots);
 }, 500);
 
 var controller = new AbortController();
 var timeoutId = setTimeout(function() { controller.abort(); }, 30000); 
 fetch(endpoint, {
 method: 'POST',
 headers: { 'Content-Type': 'application/json' },
 body: JSON.stringify({ java_files: java_files, txt_files: txt_files }),
 signal: controller.signal
 })
 .then(function(r){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (!r.ok &amp;&amp; r.status !== 400) {
 throw new Error('Erreur HTTP ' + r.status + ' : ' + r.statusText);
 }
 return r.text();
 })
 .then(function(t){
 try {
 var j=JSON.parse(t);
 
 if(j.status==='ran_successfully') {
 resultDiv.innerHTML='&lt;pre style="color:#222;background:#e0ffe0;padding:12px;border-radius:6px;">'+(j.output||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='compiling') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='runtime_error') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else {
 resultDiv.textContent = t;
 }
 
 if(j.status==='compiling') {
 var errorText = j.error || '';
 var errorRegex = new RegExp('([\\w./\\-]+\\.java):(\\d+): error: ([^\\n]+)([\\s\\S]*?)(?=\\n[\\w./\\-]+\\.java:|$)','g');
 var match;
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 while ((match = errorRegex.exec(errorText)) !== null) {
 var file = match[1], lineStr = match[2], msg = match[3], details = match[4];
 var line = parseInt(lineStr, 10) - 1;
 var errorMsg = (msg + (details ? details.replace(/\s+/g, ' ') : '')).trim();
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var nameInput = block.querySelector('.export-file-name');
 if (nameInput &amp;&amp; (nameInput.textContent.trim() === file || nameInput.textContent.trim().endsWith('/'+file) || nameInput.textContent.trim().endsWith('\\'+file))) {
 if (block._cm) {
 block._cm.operation(function() {
 block._cm.markText({line:line, ch:0}, {line:line+1, ch:0}, {
 className: 'cm-java-error',
 title: errorMsg
 });
 });
 }
 
 if (!block._javaErrorLines) { block._javaErrorLines = {}; }
 block._javaErrorLines[line] = errorMsg;
 }
 });
 }
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm &amp;&amp; block._cm.getOption('lineNumbers')) {
 
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 var cursor = block._cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 }
 }
 });
 } else {
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 } catch(e){ console.log(e); resultDiv.textContent=t; }
 })
 .catch(function(error){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (error.name === 'AbortError') {
 resultDiv.textContent = 'Erreur : délai d’attente dépassé (30 secondes).';
 } else {
 resultDiv.textContent = 'Erreur lors de la requête : ' + error;
 }
 });
 };
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var cm = block._cm;
 if (!cm) return;
 cm.on('mouseover', function(cm, event) {
 var pos = cm.coordsChar({ left: event.clientX, top: event.clientY });
 var line = pos.line, ch = pos.ch;
 var cursor = cm.getCursor();
 if (line === cursor.line &amp;&amp; block._javaErrorLines &amp;&amp; block._javaErrorLines[line]) {
 var msg = block._javaErrorLines[line];
 showTooltip(msg, event.clientX, event.clientY);
 }
 });
 cm.on('mouseout', function(cm, event) {
 hideTooltip();
 });
 });
 })();&lt;/script>
 &lt;/div>
&lt;/div>
&lt;div class="java-inline">






 &lt;div id="java-runner-1751039190520634814">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/eclipse.min.css">
 &lt;style>
 #java-runner-1751039190520634814 .export-form textarea { width:100%; min-height:120px; font-family:monospace; border-radius:4px; border:1px solid #ccc; }
 #java-runner-1751039190520634814 .export-form { margin-bottom:0; }
 #java-runner-1751039190520634814 .export-result { background:#222; color:#eee; padding:12px; border-radius:6px; margin-top:16px; white-space:pre-wrap; font-family:monospace; }
 #java-runner-1751039190520634814 .export-endpoint-info { color:#1976d2; font-size:0.98em; margin-top:8px; }
 #java-runner-1751039190520634814 .export-btn { background:#1976d2; color:#fff; border:none; border-radius:4px; padding:8px 16px; font-size:1em; cursor:pointer; margin-top:8px; }
 #java-runner-1751039190520634814 .export-file-block { max-width: 100%;flex:1 1 350px; background:#f9f9f9; border:1px solid #ddd; border-radius:6px; padding:12px; margin-bottom:8px; }
 #java-runner-1751039190520634814 .export-file-block .export-file-name { font-weight:bold; margin-bottom:4px; }
 .cm-java-error { background: #ffe0e0 !important; border-bottom: 2px dotted #c00; cursor: pointer; }
 .cm-java-error-line { background: #fff0f0 !important; }
 &lt;/style>
 &lt;form class="export-form java-runner-1751039190520634814-form" style="margin-bottom:0;">
 &lt;input type="hidden" class="export-endpoint-var" value="https://flask-service-inf1220-java.90qakjuvfj4f8.ca-central-1.cs.amazonlightsail.com/run">
 &lt;div style="display:flex;gap:12px;flex-wrap:wrap;">
 &lt;div class='export-file-block'>&lt;div class='export-file-name'>ExempleZero.java&lt;/div>&lt;textarea>
public class ExempleZero {
 public static void main(String[] s) {
 double minus_zero = -0.0;
 double plus_zero = &amp;#43;0.0;
 System.out.println(minus_zero == plus_zero);
 System.out.println(1/minus_zero);
 System.out.println(1/plus_zero);
 System.out.println(1/minus_zero == 1/plus_zero);
 double n = 0.0 / 0.0;
 System.out.println(n);
 System.out.println(n == n);
 }
}
&lt;/textarea>&lt;/div>
 &lt;/div>
 &lt;button type="submit" class="export-btn java-runner-1751039190520634814-btn" style="background:#1976d2;color:#fff;border:none;border-radius:4px;padding:8px 16px;font-size:1em;cursor:pointer;margin-top:8px;">Exécuter&lt;/button>
 &lt;/form>
 &lt;div class="export-result">&lt;/div>
 &lt;div class="java-error-tooltip" style="display:none;position:absolute;z-index:1000;background:#fff0f0;color:#c00;border:1px solid #c00;padding:6px 12px;border-radius:6px;font-size:1em;box-shadow:0 2px 8px #0002;">&lt;/div>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.js">&lt;/script>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/mode/clike/clike.min.js">&lt;/script>
 &lt;script>(function(){
 var root = document.getElementById('java-runner-1751039190520634814');
 if (!root) return;
 var form = root.querySelector('form');
 var resultDiv = root.querySelector('.export-result');
 var endpoint = form.querySelector('.export-endpoint-var').value;
 var tooltip = root.querySelector('.java-error-tooltip');
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 if(name.endsWith('.java')) {
 var cm = CodeMirror.fromTextArea(ta, {
 mode: "text/x-java",
 theme: "eclipse",
 lineNumbers: true,
 indentUnit: 4,
 tabSize: 4
 });
 block._cm = cm;
 
 block._javaErrorLines = {};
 
 cm.on('cursorActivity', function() {
 var statusBar = block.querySelector('.java-error-status-bar');
 if (!statusBar) return;
 var cursor = cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 
 if(name.endsWith('.java')) {
 if (!block.querySelector('.java-error-status-bar')) {
 var statusBar = document.createElement('div');
 statusBar.className = 'java-error-status-bar';
 statusBar.style.marginTop = '4px';
 statusBar.style.fontSize = '0.95em';
 statusBar.style.color = '#c00';
 statusBar.style.minHeight = '1.2em';
 statusBar.style.visibility = 'hidden';
 block.appendChild(statusBar);
 }
 }
 });
 
 function showTooltip(msg, x, y) {
 tooltip.textContent = msg;
 tooltip.style.display = 'block';
 tooltip.style.left = (x+10) + 'px';
 tooltip.style.top = (y+10) + 'px';
 }
 function hideTooltip() {
 tooltip.style.display = 'none';
 }
 form.onsubmit = function(e){
 e.preventDefault();
 var java_files = [], txt_files = [];
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 var content = block._cm ? block._cm.getValue() : ta.value;
 if(name.endsWith('.java')) java_files.push({name: name, content: content});
 else txt_files.push({name: name, content: content});
 });
 
 var dots = 0;
 resultDiv.textContent = 'Exécution en cours';
 var execAnim = setInterval(function() {
 dots = (dots + 1) % 4;
 resultDiv.textContent = 'Exécution en cours' + '.'.repeat(dots);
 }, 500);
 
 var controller = new AbortController();
 var timeoutId = setTimeout(function() { controller.abort(); }, 30000); 
 fetch(endpoint, {
 method: 'POST',
 headers: { 'Content-Type': 'application/json' },
 body: JSON.stringify({ java_files: java_files, txt_files: txt_files }),
 signal: controller.signal
 })
 .then(function(r){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (!r.ok &amp;&amp; r.status !== 400) {
 throw new Error('Erreur HTTP ' + r.status + ' : ' + r.statusText);
 }
 return r.text();
 })
 .then(function(t){
 try {
 var j=JSON.parse(t);
 
 if(j.status==='ran_successfully') {
 resultDiv.innerHTML='&lt;pre style="color:#222;background:#e0ffe0;padding:12px;border-radius:6px;">'+(j.output||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='compiling') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='runtime_error') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else {
 resultDiv.textContent = t;
 }
 
 if(j.status==='compiling') {
 var errorText = j.error || '';
 var errorRegex = new RegExp('([\\w./\\-]+\\.java):(\\d+): error: ([^\\n]+)([\\s\\S]*?)(?=\\n[\\w./\\-]+\\.java:|$)','g');
 var match;
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 while ((match = errorRegex.exec(errorText)) !== null) {
 var file = match[1], lineStr = match[2], msg = match[3], details = match[4];
 var line = parseInt(lineStr, 10) - 1;
 var errorMsg = (msg + (details ? details.replace(/\s+/g, ' ') : '')).trim();
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var nameInput = block.querySelector('.export-file-name');
 if (nameInput &amp;&amp; (nameInput.textContent.trim() === file || nameInput.textContent.trim().endsWith('/'+file) || nameInput.textContent.trim().endsWith('\\'+file))) {
 if (block._cm) {
 block._cm.operation(function() {
 block._cm.markText({line:line, ch:0}, {line:line+1, ch:0}, {
 className: 'cm-java-error',
 title: errorMsg
 });
 });
 }
 
 if (!block._javaErrorLines) { block._javaErrorLines = {}; }
 block._javaErrorLines[line] = errorMsg;
 }
 });
 }
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm &amp;&amp; block._cm.getOption('lineNumbers')) {
 
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 var cursor = block._cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 }
 }
 });
 } else {
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 } catch(e){ console.log(e); resultDiv.textContent=t; }
 })
 .catch(function(error){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (error.name === 'AbortError') {
 resultDiv.textContent = 'Erreur : délai d’attente dépassé (30 secondes).';
 } else {
 resultDiv.textContent = 'Erreur lors de la requête : ' + error;
 }
 });
 };
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var cm = block._cm;
 if (!cm) return;
 cm.on('mouseover', function(cm, event) {
 var pos = cm.coordsChar({ left: event.clientX, top: event.clientY });
 var line = pos.line, ch = pos.ch;
 var cursor = cm.getCursor();
 if (line === cursor.line &amp;&amp; block._javaErrorLines &amp;&amp; block._javaErrorLines[line]) {
 var msg = block._javaErrorLines[line];
 showTooltip(msg, event.clientX, event.clientY);
 }
 });
 cm.on('mouseout', function(cm, event) {
 hideTooltip();
 });
 });
 })();&lt;/script>
 &lt;/div>
&lt;/div>
&lt;div class="java-inline">






 &lt;div id="java-runner-1751039190520723861">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.css">
 &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/theme/eclipse.min.css">
 &lt;style>
 #java-runner-1751039190520723861 .export-form textarea { width:100%; min-height:120px; font-family:monospace; border-radius:4px; border:1px solid #ccc; }
 #java-runner-1751039190520723861 .export-form { margin-bottom:0; }
 #java-runner-1751039190520723861 .export-result { background:#222; color:#eee; padding:12px; border-radius:6px; margin-top:16px; white-space:pre-wrap; font-family:monospace; }
 #java-runner-1751039190520723861 .export-endpoint-info { color:#1976d2; font-size:0.98em; margin-top:8px; }
 #java-runner-1751039190520723861 .export-btn { background:#1976d2; color:#fff; border:none; border-radius:4px; padding:8px 16px; font-size:1em; cursor:pointer; margin-top:8px; }
 #java-runner-1751039190520723861 .export-file-block { max-width: 100%;flex:1 1 350px; background:#f9f9f9; border:1px solid #ddd; border-radius:6px; padding:12px; margin-bottom:8px; }
 #java-runner-1751039190520723861 .export-file-block .export-file-name { font-weight:bold; margin-bottom:4px; }
 .cm-java-error { background: #ffe0e0 !important; border-bottom: 2px dotted #c00; cursor: pointer; }
 .cm-java-error-line { background: #fff0f0 !important; }
 &lt;/style>
 &lt;form class="export-form java-runner-1751039190520723861-form" style="margin-bottom:0;">
 &lt;input type="hidden" class="export-endpoint-var" value="https://flask-service-inf1220-java.90qakjuvfj4f8.ca-central-1.cs.amazonlightsail.com/run">
 &lt;div style="display:flex;gap:12px;flex-wrap:wrap;">
 &lt;div class='export-file-block'>&lt;div class='export-file-name'>ExerciceForFor.java&lt;/div>&lt;textarea>
public class ExerciceForFor {
 public static void main(String args[]) {
 for (int compteur1 = 1; compteur1 &amp;lt;= 9; compteur1 = compteur1 &amp;#43; 1) {
 for (int compteur2 = 1; compteur2 &amp;lt;= compteur1; compteur2 = compteur2 &amp;#43; 1)
 System.out.print(compteur2);
 System.out.println();
 }
 }
}
&lt;/textarea>&lt;/div>
 &lt;/div>
 &lt;button type="submit" class="export-btn java-runner-1751039190520723861-btn" style="background:#1976d2;color:#fff;border:none;border-radius:4px;padding:8px 16px;font-size:1em;cursor:pointer;margin-top:8px;">Exécuter&lt;/button>
 &lt;/form>
 &lt;div class="export-result">&lt;/div>
 &lt;div class="java-error-tooltip" style="display:none;position:absolute;z-index:1000;background:#fff0f0;color:#c00;border:1px solid #c00;padding:6px 12px;border-radius:6px;font-size:1em;box-shadow:0 2px 8px #0002;">&lt;/div>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/codemirror.min.js">&lt;/script>
 &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.16/mode/clike/clike.min.js">&lt;/script>
 &lt;script>(function(){
 var root = document.getElementById('java-runner-1751039190520723861');
 if (!root) return;
 var form = root.querySelector('form');
 var resultDiv = root.querySelector('.export-result');
 var endpoint = form.querySelector('.export-endpoint-var').value;
 var tooltip = root.querySelector('.java-error-tooltip');
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 if(name.endsWith('.java')) {
 var cm = CodeMirror.fromTextArea(ta, {
 mode: "text/x-java",
 theme: "eclipse",
 lineNumbers: true,
 indentUnit: 4,
 tabSize: 4
 });
 block._cm = cm;
 
 block._javaErrorLines = {};
 
 cm.on('cursorActivity', function() {
 var statusBar = block.querySelector('.java-error-status-bar');
 if (!statusBar) return;
 var cursor = cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 
 if(name.endsWith('.java')) {
 if (!block.querySelector('.java-error-status-bar')) {
 var statusBar = document.createElement('div');
 statusBar.className = 'java-error-status-bar';
 statusBar.style.marginTop = '4px';
 statusBar.style.fontSize = '0.95em';
 statusBar.style.color = '#c00';
 statusBar.style.minHeight = '1.2em';
 statusBar.style.visibility = 'hidden';
 block.appendChild(statusBar);
 }
 }
 });
 
 function showTooltip(msg, x, y) {
 tooltip.textContent = msg;
 tooltip.style.display = 'block';
 tooltip.style.left = (x+10) + 'px';
 tooltip.style.top = (y+10) + 'px';
 }
 function hideTooltip() {
 tooltip.style.display = 'none';
 }
 form.onsubmit = function(e){
 e.preventDefault();
 var java_files = [], txt_files = [];
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var name = block.querySelector('.export-file-name').textContent;
 var ta = block.querySelector('textarea');
 var content = block._cm ? block._cm.getValue() : ta.value;
 if(name.endsWith('.java')) java_files.push({name: name, content: content});
 else txt_files.push({name: name, content: content});
 });
 
 var dots = 0;
 resultDiv.textContent = 'Exécution en cours';
 var execAnim = setInterval(function() {
 dots = (dots + 1) % 4;
 resultDiv.textContent = 'Exécution en cours' + '.'.repeat(dots);
 }, 500);
 
 var controller = new AbortController();
 var timeoutId = setTimeout(function() { controller.abort(); }, 30000); 
 fetch(endpoint, {
 method: 'POST',
 headers: { 'Content-Type': 'application/json' },
 body: JSON.stringify({ java_files: java_files, txt_files: txt_files }),
 signal: controller.signal
 })
 .then(function(r){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (!r.ok &amp;&amp; r.status !== 400) {
 throw new Error('Erreur HTTP ' + r.status + ' : ' + r.statusText);
 }
 return r.text();
 })
 .then(function(t){
 try {
 var j=JSON.parse(t);
 
 if(j.status==='ran_successfully') {
 resultDiv.innerHTML='&lt;pre style="color:#222;background:#e0ffe0;padding:12px;border-radius:6px;">'+(j.output||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='compiling') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else if(j.status==='runtime_error') {
 resultDiv.innerHTML='&lt;pre style="color:#c00;background:#ffe0e0;padding:12px;border-radius:6px;">'+(j.error||'').replace(/\n/g,'&lt;br>')+'&lt;/pre>';
 } else {
 resultDiv.textContent = t;
 }
 
 if(j.status==='compiling') {
 var errorText = j.error || '';
 var errorRegex = new RegExp('([\\w./\\-]+\\.java):(\\d+): error: ([^\\n]+)([\\s\\S]*?)(?=\\n[\\w./\\-]+\\.java:|$)','g');
 var match;
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 while ((match = errorRegex.exec(errorText)) !== null) {
 var file = match[1], lineStr = match[2], msg = match[3], details = match[4];
 var line = parseInt(lineStr, 10) - 1;
 var errorMsg = (msg + (details ? details.replace(/\s+/g, ' ') : '')).trim();
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var nameInput = block.querySelector('.export-file-name');
 if (nameInput &amp;&amp; (nameInput.textContent.trim() === file || nameInput.textContent.trim().endsWith('/'+file) || nameInput.textContent.trim().endsWith('\\'+file))) {
 if (block._cm) {
 block._cm.operation(function() {
 block._cm.markText({line:line, ch:0}, {line:line+1, ch:0}, {
 className: 'cm-java-error',
 title: errorMsg
 });
 });
 }
 
 if (!block._javaErrorLines) { block._javaErrorLines = {}; }
 block._javaErrorLines[line] = errorMsg;
 }
 });
 }
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm &amp;&amp; block._cm.getOption('lineNumbers')) {
 
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 var cursor = block._cm.getCursor();
 var errMsg = block._javaErrorLines &amp;&amp; block._javaErrorLines[cursor.line];
 if (errMsg) {
 statusBar.textContent = 'Ligne ' + (cursor.line+1) + ' : ' + errMsg;
 statusBar.style.visibility = 'visible';
 } else {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 }
 }
 });
 } else {
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 if (block._cm) {
 block._cm.operation(function() {
 var marks = block._cm.getAllMarks();
 for (var i = 0; i &lt; marks.length; i++) { marks[i].clear(); }
 });
 }
 block._javaErrorLines = {};
 var statusBar = block.querySelector('.java-error-status-bar');
 if (statusBar) {
 statusBar.textContent = '';
 statusBar.style.visibility = 'hidden';
 }
 });
 }
 } catch(e){ console.log(e); resultDiv.textContent=t; }
 })
 .catch(function(error){
 clearInterval(execAnim);
 clearTimeout(timeoutId);
 if (error.name === 'AbortError') {
 resultDiv.textContent = 'Erreur : délai d’attente dépassé (30 secondes).';
 } else {
 resultDiv.textContent = 'Erreur lors de la requête : ' + error;
 }
 });
 };
 
 root.querySelectorAll('.export-file-block').forEach(function(block){
 var cm = block._cm;
 if (!cm) return;
 cm.on('mouseover', function(cm, event) {
 var pos = cm.coordsChar({ left: event.clientX, top: event.clientY });
 var line = pos.line, ch = pos.ch;
 var cursor = cm.getCursor();
 if (line === cursor.line &amp;&amp; block._javaErrorLines &amp;&amp; block._javaErrorLines[line]) {
 var msg = block._javaErrorLines[line];
 showTooltip(msg, event.clientX, event.clientY);
 }
 });
 cm.on('mouseout', function(cm, event) {
 hideTooltip();
 });
 });
 })();&lt;/script>
 &lt;/div>
&lt;/div>
&lt;p>Après la lecture du chapitre, répondez aux questions suivantes.&lt;/p></description></item><item><title>GitHub</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/github/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/github/</guid><description>&lt;h1 id="github-optionnel">
 GitHub (optionnel)
 &lt;a class="anchor" href="#github-optionnel">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://github.com">GitHub&lt;/a> est un site où les programmeurs partagent leur code et travaillent de manière collaborative sur des projets de programmation. Si vous créez un compte et &lt;a href="https://www.youtube.com/watch?v=hPfgekYUKgk">apprenez à utiliser Git&lt;/a>, vous pourrez y partager votre code, ou contribuer au code d&amp;rsquo;autres projets. C&amp;rsquo;est une excellente manière de développer un portfolio afin d&amp;rsquo;impressionner les employeurs potentiels. &lt;a href="https://github.com/lemire">Vous trouverez le professeur responsable du cours sur GitHub&lt;/a>. Encore une fois, tout s&amp;rsquo;y déroule en anglais, mais si vous ne maîtrisez pas l&amp;rsquo;anglais, vous aurez du mal à faire carrière en informatique.&lt;/p></description></item><item><title>Les structures de contrôle</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-1/</guid><description>&lt;h1 id="les-structures-de-contrôle">
 Les structures de contrôle
 &lt;a class="anchor" href="#les-structures-de-contr%c3%b4le">#&lt;/a>
&lt;/h1>
&lt;p>Les structures de contrôle sont des outils essentiels en programmation : elles permettent de prendre des décisions et de répéter des actions selon certaines conditions. En Java, les structures de contrôle principales sont &lt;strong>if-else&lt;/strong> et &lt;strong>switch-case&lt;/strong> pour le choix, ainsi que les boucles (qui seront vues plus loin).&lt;/p>
&lt;p>Une structure de contrôle permet d’exécuter différentes instructions selon la valeur d’une variable ou le résultat d’une expression logique. Cela rend les programmes dynamiques et capables de s’adapter à différentes situations.&lt;/p></description></item><item><title>Les structures itératives</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-2/</guid><description>&lt;h1 id="les-structures-itératives">
 Les structures itératives
 &lt;a class="anchor" href="#les-structures-it%c3%a9ratives">#&lt;/a>
&lt;/h1>
&lt;p>Les structures itératives permettent d'itérer un certain nombre de fois, basé sur des variables de contrôle. Elles permettent par exemple de chercher une valeur dans une structure de données (ex. un tableau d'entier), de lire un flux de données caractère par caractère, etc. Elles sont l'implémentation des "tant que", des "pour i de 1 à 10 faire", etc. Dans le langage Java, il existe trois structures itératives : le while, le for et le do-while.&lt;/p></description></item><item><title>Les structures de données de base</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-3/</guid><description>&lt;h1 id="les-structures-de-données-de-base">
 Les structures de données de base
 &lt;a class="anchor" href="#les-structures-de-donn%c3%a9es-de-base">#&lt;/a>
&lt;/h1>
&lt;p>Le langage Java possède toutes les stuctures de données nécessaires.
Faisons-en rapidement le tour. En Java, les types de données sont organisés en deux grandes catégories : les types primitifs et les types référence. Les types primitifs, tels que int, double, float, long, short, byte, char et boolean, sont des types de base qui stockent directement des valeurs simples et ne sont pas des objets. Chaque type primitif possède une classe enveloppe correspondante (par exemple, Integer pour int, Double pour double) dans la catégorie des classes enveloppes. Ces classes permettent de représenter les primitifs sous forme d’objets, offrant des fonctionnalités supplémentaires comme l’utilisation dans des collections ou la conversion entre types.&lt;/p></description></item><item><title>La programmation fonctionnelle en Java</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/fonctionnel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/fonctionnel/</guid><description>&lt;h1 id="la-programmation-fonctionnelle-en-java">
 La programmation fonctionnelle en Java
 &lt;a class="anchor" href="#la-programmation-fonctionnelle-en-java">#&lt;/a>
&lt;/h1>
&lt;p>La programmation fonctionnelle tire ses origines des mathématiques, en particulier du calcul lambda développé par Alonzo Church dans les années 1930. Ce formalisme a posé les bases théoriques pour décrire les calculs comme des fonctions pures, sans effets de bord. Dans les années 1950, John McCarthy a créé Lisp, le premier langage explicitement inspiré de ces idées, introduisant des concepts comme les fonctions de première classe. Les années 1980 ont vu l’émergence de langages comme Haskell, qui a mis l’accent sur les fonctions pures et l’évaluation paresseuse.
L&amp;rsquo;évaluation paresseuse est une stratégie en programmation fonctionnelle où l&amp;rsquo;évaluation d&amp;rsquo;une expression est retardée jusqu&amp;rsquo;à ce que sa valeur soit réellement nécessaire. Cela permet d&amp;rsquo;optimiser les performances en évitant les calculs inutiles et de supporter des structures de données potentiellement infinies.
Depuis, la programmation fonctionnelle a influencé de nombreux langages modernes (Scala, Clojure, F#) et a été intégrée dans des langages impératifs comme Python, JavaScript et Java, en réponse à la nécessité de parallélisme et de code plus robuste.&lt;/p></description></item><item><title>Exercices sur les structures de contrôle, les structures de données, les structures itératives</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/exercices-3-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/exercices-3-1/</guid><description>&lt;h1 id="exercices-sur-les-structures-de-contrôle-les-structures-de-données-les-structures-itératives">
 Exercices sur les structures de contrôle, les structures de données, les structures itératives
 &lt;a class="anchor" href="#exercices-sur-les-structures-de-contr%c3%b4le-les-structures-de-donn%c3%a9es-les-structures-it%c3%a9ratives">#&lt;/a>
&lt;/h1>
&lt;h2 id="questionsréponses">
 Questions/Réponses
 &lt;a class="anchor" href="#questionsr%c3%a9ponses">#&lt;/a>
&lt;/h2>
&lt;p>Veuillez répondre mentalement, sur papier ou bien en créant le code nécessaire pour répondre à ces questions avant de regarder la réponse.&lt;/p>
&lt;p>Quand on vous demande de produire du code, vous devez le tester. C'est une erreur commune chez les étudiants: ils produisent rapidement du code en supposant qu'il est fonctionnel. Prenez le temps de vous relire, d'être attentif. Et testez votre code. Encore et encore.&lt;/p></description></item><item><title>Les exceptions</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-4/</guid><description>&lt;h1 id="les-exceptions">
 Les exceptions
 &lt;a class="anchor" href="#les-exceptions">#&lt;/a>
&lt;/h1>
&lt;p>En programmation, il est essentiel de pouvoir gérer les erreurs qui peuvent survenir lors de l’exécution d’un programme. Java propose un mécanisme puissant et structuré : les exceptions. Plutôt que de laisser le programme s’arrêter brutalement en cas de problème (comme une division par zéro ou l’ouverture d’un fichier inexistant), Java permet de « lancer » une exception. Cette exception peut alors être capturée et traitée, ce qui rend le code plus robuste, plus lisible et plus facile à maintenir.&lt;/p></description></item><item><title>La récursivité</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/activite-3-5/</guid><description>&lt;h1 id="la-récursivité">
 La récursivité
 &lt;a class="anchor" href="#la-r%c3%a9cursivit%c3%a9">#&lt;/a>
&lt;/h1>
&lt;p>La récursivité est une technique fondamentale en informatique qui consiste pour une fonction à s’appeler elle-même afin de résoudre un problème en le divisant en sous-problèmes plus simples. Cette approche permet d’exprimer élégamment des solutions à des problèmes complexes, comme le calcul de suites, la recherche dans des structures arborescentes ou la résolution de certains algorithmes mathématiques. Comprendre la récursivité est essentiel pour progresser en algorithmique et en programmation.&lt;/p></description></item><item><title>Exercices sur les exceptions et la récursivité</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/exercices-3-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/exercices-3-2/</guid><description>&lt;h1 id="exercices-sur-les-exceptions-et-la-récursivité">
 Exercices sur les exceptions et la récursivité
 &lt;a class="anchor" href="#exercices-sur-les-exceptions-et-la-r%c3%a9cursivit%c3%a9">#&lt;/a>
&lt;/h1>
&lt;h2 id="questionsréponses">
 Questions/Réponses
 &lt;a class="anchor" href="#questionsr%c3%a9ponses">#&lt;/a>
&lt;/h2>
&lt;p>Veuillez répondre mentalement, sur papier ou bien en créant le code nécessaire pour répondre à ces questions avant de regarder la réponse.&lt;/p>
&lt;p>Quand on vous demande de produire du code, vous devez le tester. C'est une erreur commune chez les étudiants: ils produisent rapidement du code en supposant qu'il est fonctionnel. Prenez le temps de vous relire, d'être attentif. Et testez votre code. Encore et encore.&lt;/p></description></item><item><title>Recommandations</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/conseils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/conseils/</guid><description>&lt;h1 id="recommandations">
 Recommandations
 &lt;a class="anchor" href="#recommandations">#&lt;/a>
&lt;/h1>
&lt;p>Pour aborder un problème algorithmique, adoptez une démarche structurée. Analysez d’abord le problème en le décomposant en étapes simples. Avant de coder, rédigez un pseudo-code ou un plan pour clarifier la logique. Cette préparation limite les erreurs et facilite la maintenance.&lt;/p>
&lt;p>Privilégiez un code lisible avec des noms de variables explicites. Testez chaque étape avec des cas simples avant d’explorer des scénarios complexes. Cette validation progressive permet de repérer rapidement les anomalies et de garantir la robustesse de la solution.&lt;/p></description></item><item><title>Travail noté 3</title><link>https://lemire.github.io/inf1220-hugo/docs/modules/module3/travail-note-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lemire.github.io/inf1220-hugo/docs/modules/module3/travail-note-3/</guid><description>&lt;h1 id="travail-noté-3---les-structures-de-données-de-contrôle-et-ditération">
 Travail noté 3 - Les structures de données, de contrôle et d&amp;rsquo;itération
 &lt;a class="anchor" href="#travail-not%c3%a9-3---les-structures-de-donn%c3%a9es-de-contr%c3%b4le-et-dit%c3%a9ration">#&lt;/a>
&lt;/h1>
&lt;p>Les travaux notés du cours INF1220 évaluent la capacité à comprendre des énoncés logiques et à les transcrire en code Java de manière autonome, une compétence essentielle testée également à l’examen final. Les étudiants doivent effectuer des recherches sur le web, une pratique courante en programmation, et soumettre leurs travaux sous forme de fichier PDF via l’outil de dépôt de la TÉLUQ, avant la date de fin de cours indiquée dans le portail étudiant. Les soumissions par courriel ne sont pas acceptées et entraînent une note de zéro, tout comme les documents manuscrits, les saisies d’écran ou ceux ne permettant pas le copier-coller du code. Les travaux, d’un niveau comparable à ceux d’autres universités québécoises, doivent inclure des explications claires et personnelles, l’utilisation du robot conversationnel du cours étant autorisée à condition de produire ses propres analyses.&lt;/p></description></item></channel></rss>